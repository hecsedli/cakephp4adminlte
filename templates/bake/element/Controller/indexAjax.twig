{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
    /**
     * Ajax Index method
     *
     * @return \Cake\Http\Response|null|void Renders view
     */
    public function indexAjax()
    {
{% set belongsTo = Bake.aliasExtractor(modelObj, 'BelongsTo') %}
{% if belongsTo %}
        $this->paginate = [
            'contain' => {{ Bake.exportArray(belongsTo)|raw }},
        ];
{% endif %}
		$session = $this->getRequest()->getSession();
		$conditions = [];
		
		if ($this->request->is(['patch', 'post', 'put'])) {
	    	 $data = $this->request->getData();
			 $session->write("{{ currentModelName }}Search.data", $this->request->getData());
	    } else if($session->check("{{ currentModelName }}Search.data")) {
		    $data = $session->read("{{ currentModelName }}Search.data");
			
	    }
	    
	    if (!empty($data['search'])) {
		    
		}
		
		$query = $this->{{ currentModelName }}->find()->where($conditions);
		
		${{ pluralName }} = $this->paginate($query);

		$this->set(compact('{{ pluralName }}'));
    }
